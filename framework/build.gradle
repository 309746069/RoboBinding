archivesBaseName = 'robobinding_no_aop'

repositories {
    mavenCentral()
}

ext {
	guavaVersion = '11.0.1'
	robolectricVersion = '1.2'
	hamcrestVersion = '1.3'	
	androidVersion = '4.1.1.4'
	commonsCollectionsVersion = '3.2.1'
}

dependencies {
	compile "com.google.guava:guava:$guavaVersion"
	compile "com.google.android:android:$androidVersion"
	
	testCompile "org.hamcrest:hamcrest-library:$hamcrestVersion"
	//testCompile "com.pivotallabs:robolectric:$robolectricVersion"
	testCompile ("junit:junit:$junitVersion") {
		exclude group: 'org.hamcrest', module: 'hamcrest-core'
	}
	testCompile("org.mockito:mockito-core:$mockitoVersion") {
		exclude group: 'org.hamcrest', module: 'hamcrest-core'
	}
	testCompile "org.apache.commons:commons-lang3:$commonsLangVersion"
	testCompile "commons-collections:commons-collections:$commonsCollectionsVersion"
}

task lintCheck(type:Exec) {
	description = 'Run Android lint to check if there are any violations'
	group = 'other'
	
	commandLine 'cmd', '/c', '${env.ANDROID_HOME}/tools/lint.bat'
	standardOutput = new ByteArrayOutputStream()
	ext.output = {
	  return standardOutput.toString()
	}
}

apply plugin: 'eclipse'

eclipse {
	project {
		name = 'RoboBinding-framework'
		comment = 'The RoboBinding framework'
		
		natures 'org.springsource.ide.eclipse.gradle.core.nature'
	}
	
	classpath {
		containers 'org.springsource.ide.eclipse.gradle.classpathcontainer'
		/*
		file.withXml {
			def node = it.asNode()
			
			node.appendNode('classpathentry kind="src" path="src/main/java"')
			node.appendNode('classpathentry kind="src" path="src/test/java"')
		}*/
	}
}
  
